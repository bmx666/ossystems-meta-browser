From 2817f07563070d71b624b4397af32d820efec244 Mon Sep 17 00:00:00 2001
From: Takuro Ashie <ashie@clear-code.com>
Date: Thu, 18 Apr 2019 23:15:16 +0900
Subject: [PATCH] Bug 1545437 - Add options to specify Rust target name

 r?glandium

Certain build systems such as Yocto know more suitable Rust target name, so it
would be better that there is a way to pass it to Mozilla's build system.

Differential Revision: https://phabricator.services.mozilla.com/D28069

---
 build/moz.configure/rust.configure | 37 ++++++++++++++++++++++++++----
 1 file changed, 33 insertions(+), 4 deletions(-)

diff --git a/build/moz.configure/rust.configure b/build/moz.configure/rust.configure
index dc23355253..e2d9a8552f 100644
--- a/build/moz.configure/rust.configure
+++ b/build/moz.configure/rust.configure
@@ -275,6 +275,28 @@ def rust_supported_targets(rustc):
     return data
 
 
+option(env='RUST_HOST',
+       nargs=1,
+       help='Define the system type for Rust performing the build')
+
+@depends('RUST_HOST')
+@checking('rust host', lambda host: host)
+def rust_host_env(value):
+    if value:
+        return value[0]
+
+
+option(env='RUST_TARGET',
+       nargs=1,
+       help='Define the system type for Rust where the resulting executables will be used')
+
+@depends('RUST_TARGET')
+@checking('rust target', lambda target: target)
+def rust_target_env(value):
+    if value:
+        return value[0]
+
+
 def detect_rustc_target(
     host_or_target, compiler_info, arm_target, rust_supported_targets
 ):
@@ -457,65 +479,44 @@ def assert_rust_compile(host_or_target, rustc_target, rustc):
         os.remove(out_path)
 
 
-@depends(
-    rustc,
-    host,
-    host_c_compiler,
-    rustc_info.host,
-    rust_supported_targets,
-    arm_target,
-    when=rust_compiler,
-)
-@checking("for rust host triplet")
-@imports(_from="textwrap", _import="dedent")
-def rust_host_triple(
-    rustc, host, compiler_info, rustc_host, rust_supported_targets, arm_target
-):
-    rustc_target = detect_rustc_target(
-        host, compiler_info, arm_target, rust_supported_targets
-    )
-    if rustc_target != rustc_host:
-        if host.alias == rustc_target:
-            configure_host = host.alias
-        else:
-            configure_host = "{}/{}".format(host.alias, rustc_target)
-        die(
-            dedent(
-                """\
-        The rust compiler host ({rustc}) is not suitable for the configure host ({configure}).
-
-        You can solve this by:
-        * Set your configure host to match the rust compiler host by editing your
-        mozconfig and adding "ac_add_options --host={rustc}".
-        * Or, install the rust toolchain for {configure}, if supported, by running
-        "rustup default stable-{rustc_target}"
-        """.format(
-                    rustc=rustc_host,
-                    configure=configure_host,
-                    rustc_target=rustc_target,
-                )
-            )
-        )
-    assert_rust_compile(host, rustc_target, rustc)
-    return rustc_target
-
-
-@depends(
-    rustc, target, c_compiler, rust_supported_targets, arm_target, when=rust_compiler
-)
-@checking("for rust target triplet")
-def rust_target_triple(
-    rustc, target, compiler_info, rust_supported_targets, arm_target
-):
-    rustc_target = detect_rustc_target(
-        target, compiler_info, arm_target, rust_supported_targets
-    )
-    assert_rust_compile(target, rustc_target, rustc)
-    return rustc_target
-
-
-set_config("RUST_TARGET", rust_target_triple)
-set_config("RUST_HOST_TARGET", rust_host_triple)
+@template
+def rust_triple_alias(host_or_target):
+    """Template defining the alias used for rustc's --target flag.
+    `host_or_target` is either `host` or `target` (the @depends functions
+    from init.configure).
+    """
+    assert host_or_target in {host, target}
+
+    host_or_target_str = {host: 'host', target: 'target'}[host_or_target]
+
+    @depends(rustc, host_or_target, rust_host_env, rust_target_env,
+             c_compiler, rust_supported_targets, arm_target,
+             when=rust_compiler)
+    @checking('for rust %s triplet' % host_or_target_str)
+    @imports('os')
+    @imports('subprocess')
+    @imports(_from='mozbuild.configure.util', _import='LineIO')
+    @imports(_from='mozbuild.shellutil', _import='quote')
+    @imports(_from='tempfile', _import='mkstemp')
+    @imports(_from='textwrap', _import='dedent')
+    def rust_target(rustc, host_or_target, rust_host_env, rust_target_env,
+                    compiler_info, rust_supported_targets, arm_target):
+        specified_targets = {"host": rust_host_env, "target": rust_target_env}
+        specified_target = specified_targets[host_or_target_str]
+        if (specified_target):
+            return specified_target
+
+        return detect_rustc_target(target, compiler_info, arm_target, rust_supported_targets)
+
+    return rust_target
+
+
+rust_target_triple_extra = rust_triple_alias(target)
+rust_host_triple_extra = rust_triple_alias(host)
+
+
+set_config("RUST_TARGET", rust_target_triple_extra)
+set_config("RUST_HOST_TARGET", rust_host_triple_extra)
 
 
 # This is used for putting source info into symbol files.
